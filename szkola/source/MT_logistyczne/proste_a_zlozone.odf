<h1 id="wstęp-nauka-z-komputerem">Wstęp: nauka z komputerem </h1>
<p>Komputer jest narzędziem coraz częściej stosowanym przez naukowców do ukazywania skrzętnie ukrywanych przez naturę tajemnic. Symulacja, obok eksperymentu i teorii, staje się trzecim sposobem badania świata. Na Uniwersytecie Śląskim trzy lata temu rozpoczęliśmy program integracji metod komputerowych z edukacją. W efekcie powstało wiele niezwykle fascynujących materiałów dydaktycznych pozwalających na łatwiejsze i bardziej dogłębne poznanie wielu tematów. Jako podstawowe narzędzie został zastosowanych język Python, który wraz z potęgą bibliotek, które są w nim dostępne stanowi chyba najlepsze na dzień dzisiejszy narzędzie do samodzielnego eksperymentowania z równaniami, obrazami czy danymi. Jedną z ciekawszych implementacji kompletnego środowiska pracy jest program Sage. Stanowi on otwartą integrację systemu algebry komputerowej z językiem Python, ponadto umożliwia rozpoczęcie zabawy od zaraz, korzystając z przeglądarki internetowej i jednej z możliwych opcji dostępu poprzez usługę chmurową http://cloud.sagemath.org lub server pojedyńczych obliczeń, na którym bazuje interaktywna wersja tego artykułu (http://visual.icse.us.edu.pl/Warsztaty).</p>
<h1 id="chaos-w-ekologii">Chaos w ekologii</h1>
<p>W latach siedemdziesiątych XX wieku na Uniwersytecie w Oxfordzie australijski uczony Robert May zajmował się teoretycznymi aspektami dynamiki populacyjnej. Swoje prace podsumował w artykule, który ukazał się w <em>Nature</em> pod prowokującym tytułem “Proste modele matematyczne z bardzo skomplikowaną dynamiką” <span class="citation"></span>. Artykuł ten po latach stał się jedną z najczęściej cytowanych prac z teoretycznej ekologii. Co wzbudziło tak wielkie zainteresowanie w tej pracy?</p>
<p>Klasycznym zadaniem dynamiki populacyjnej jest obliczenie populacji pewnego gatunku w przyszłości znając jego obecny stan. Matematycznie najprostszym rodzajem ekosystemów wydawały się takie, w których życie jednego pokolenia populacji trwa jeden sezon. Dobrym przykładem jest populacja owadów, które w ciągu jednego sezonu przechodzą pełną metamorfozę, np. motyle. Czas jest w naturalny sposób podzielony na dyskretne okresy, odpowiadające cyklom życia populacji. Równania opisujące taki ekosystem mają więc w naturalny sposób tzw. dyskretny czas, tj. <span class="math"><em>t</em> = 1, 2, 3. . . </span>. Robert May zajmował się między innymi właśnie taką dynamiką. W swoich rozważaniach uprościł ekosystem do jednego gatunku, w którym populacja była funkcją kwadratową populacji w roku poprzednim. Skąd taki model?</p>
<p>Najprostszym równaniem dyskretnym opisującym ewolucję populacji jest model liniowy:</p>
<p><br /><span class="math">$\label{eq:Ni}
N_{i+1} = \alpha \; N_{i},$</span><br /></p>
<p>gdzie <span class="math"><em>N</em><sub><em>i</em></sub></span> to liczebność w i-tym sezonie, a <span class="math"><em>N</em><sub><em>i</em> + 1</sub></span> opisuje populację w następnym sezonie. Łatwo się przekonać, że takie równanie może prowadzić to trzech scenariuszy. Dla <span class="math"><em>α</em> = 1</span> ewolucja nie będzie zmieniać stanu liczebnego populacji, <span class="math"><em>α</em> &lt; 1</span> prowadzi do wyginięcia, a przypadek <span class="math"><em>α</em> &gt; 1</span> oznacza nieograniczony wzrost populacji. To prowadziłoby do zachwiania równowagi w przyrodzie. Ponieważ wszystko w przyrodzie jest ograniczone, warto poprawić to równanie w taki sposób aby brało pod uwagę ograniczoną ilość zasobów. Wyobraźmy sobie, że szkodniki zjadają zboże, którego jest dokładnie ta sama ilość co roku. Jeżeli owadów jest mało w porównaniu do ilości pożywienia to mogą rozmnażać się z pełną siła rozrodczą matematycznie określoną przez stałą <span class="math"><em>α</em> &gt; 1</span>. Jednak w miarę wzrostu liczebności szkodników, pożywienia nie będzie wystarczać i siła rozrodcza będzie maleć. W krytycznym przypadku można sobie wyobrazić ze owadów rodzi się tyle, że zjadają całe zboże przed osiągnięciem zdolności rozrodczej i populacja ginie. Model uwzględniający ten efekt ograniczonego dostępu do pożywienia został po raz pierwszy zaproponowany przez Verhulsta w roku 1838. W modelu tym tempo wzrostu <span class="math"><em>α</em></span> nie jest stałe, ale zależy od stanu populacji:</p>
<p><br /><span class="math">$\label{V}
\alpha = \alpha( N_{i} )$</span><br /></p>
<p>Zależność funkcyjna tempa wzrostu <span class="math"><em>α</em></span> od <span class="math"><em>N</em><sub><em>i</em></sub></span> powinna mieć następującą własność: jeżeli populacja wzrasta, tempo wzrostu powinno maleć ponieważ jest utrudniony dostęp do pożywienia. Oczywiście jest wiele funkcji o tej własności: to są funkcje malejące. Verhulst zaproponował taką oto zależność:</p>
<p><br /><span class="math">$\label{V1}
\alpha = a \left(1-\frac{N_{i}}{K} \right)$</span><br /></p>
<p>gdzie <span class="math"><em>a</em> &gt; 0</span> oraz stała <span class="math"><em>K</em> &gt; 0</span> charakteryzuje zasoby pożywienia i nazywa sie pojemnością środowiska. Jak zmiana K wpływa na tempo wzrostu populacji? Jeżeli K rośnie to <span class="math"><em>N</em><sub><em>i</em></sub> / <em>K</em></span> maleje. Z kolei to powoduje że <span class="math">1 − <em>N</em><sub><em>i</em></sub> / <em>K</em></span> rośnie, czyli <span class="math"><em>α</em></span> rośnie. Oznacza to, że tempo wzrostu rośnie i populacja rozrasta się szybciej. Zmodyfikujmy więc poprzedni model (1) zakładając, że tempo wzrostu <span class="math"><em>α</em></span> zmienia się tak jak w równaniu (3). Wówczas otrzymamy równanie</p>
<p><br /><span class="math">$\label{eq:N2i}
N_{i+1} = a \left(1-\frac{N_{i}}{K} \right) \; N_{i}$</span><br /></p>
<p>Równanie to można zapisać w postaci równania rekurencyjnego</p>
<p><br /><span class="math">$x_{i+1} = a x_{i} (1 - x_{i}),
\label{eq:logistic}$</span><br /></p>
<p>gdzie <span class="math"><em>x</em><sub><em>i</em></sub> = <em>N</em><sub><em>i</em></sub> / <em>K</em></span> oraz <span class="math"><em>x</em><sub><em>i</em> + 1</sub> = <em>N</em><sub><em>i</em> + 1</sub> / <em>K</em></span> oznaczają przeskalowane liczebności populacji w czasie <span class="math"><em>i</em></span> oraz w czasie <span class="math"><em>i</em> + 1</span>. Równanie (5) nazywa się <em>równaniem logistycznym</em>.</p>
<p>Mogłoby się wydawać, że przy tak niewielkiej modyfikacji nasz model jest prosty do analizy. Sprawdźmy to. Rozważmy równanie ([eq:logistic]) dla parametru <span class="math"><em>a</em> = 0. 5</span> startując z początkowej populacji <span class="math"><em>x</em><sub>0</sub> = 0. 45</span>. Kolejne wartości populacji można otrzymać stosując równanie rekurencyjne ([eq:logistic]):</p>
<p><br /><span class="math"><em>x</em><sub>1</sub> = <em>a</em><em>x</em><sub>0</sub>(1 − <em>x</em><sub>0</sub>),  <em>x</em><sub>2</sub> = <em>a</em><em>x</em><sub>2</sub>(1 − <em>x</em><sub>2</sub>),  <em>x</em><sub>3</sub> = <em>a</em><em>x</em><sub>2</sub>(1 − <em>x</em><sub>2</sub>),  itd</span><br /></p>
<p>Aby ułatwić obliczenia w (6) możemy skorzystać z poniższego programu<sup><a href="#fn1" class="footnoteRef" id="fnref1">1</a></sup> symulującego nasz model:</p>
<p>/ a = 0.5 x = 0.45 for i in range(10): x = a*x*(1-x) print x</p>
<p>Obliczamy kolejne wartości <span class="math"><em>x</em><sub><em>i</em></sub></span> i zauważamy, że maleją one do 0. Eksperymentując z powyższym kodem łatwo też jest się przekonać, że niezależnie od wartości początkowej <span class="math"><em>x</em><sub>0</sub></span> kolejne wartości <span class="math"><em>x</em><sub><em>i</em></sub></span> maleją do zera co oznacza, że populacja zawsze ginie.</p>
<p>W drugim kroku analizy zwiększamy wartość parametru <span class="math"><em>a</em></span> do dowolnej wartości z przedziału <span class="math"><em>a</em> ∈ (1, 3)</span>. Okazuje się, że wtedy ciąg <span class="math"><em>x</em><sub><em>i</em></sub></span> dąży do pewnej wielkości <span class="math"><em>x</em><sup> * </sup> &gt; 0</span>. Interpretując to w kategoriach ekologii możemy powiedzieć, że wielkość populacji ustala się na pewnym poziomie, który nie zmienia się z sezonu na sezon. Warto zauważyć, że wartość <span class="math"><em>x</em><sup> * </sup></span> nie zależy od stanu początkowego <span class="math"><em>x</em><sub>0</sub></span>. Jest to efekt dążenia ekosystemu do stabilizacji - populacja dostosowuje swoją liczebność do możliwości wyżywienia się. Matematycznie mówimy, że układ dąży do stabilnego punktu stałego, tj. spełniającego równość <span class="math"><em>x</em><sup> * </sup> = <em>f</em>(<em>x</em><sup> * </sup>)</span> (oznacza to że w chwili następnej stan jest taki sam jak w chwili poprzedniej). Z pomocą programu Sage możemy przedstawić tę ewolucję graficzne rysując wykres liczebności populacji od czasu.</p>
<p>H</p>
<div class="figure">
<embed src="xi1.pdf"><p class="caption">image</p>
</div>
<p></p>
<p>Taki efekt stabilizacji był oczekiwany przez badaczy i równanie logistyczne ([eq:logistic]) nie przyciągnęłoby szczególnej uwagi gdyby nie pewna niespodzianka. Okazało się bowiem, że dla pewnych wartości parametru <span class="math"><em>a</em></span> model (5) nie zachowuje się w przewidywalny sposób. Po pierwsze, pojawiają się stany okresowe i wielo-okresowe. Po drugie, z każdym krokiem czasowym populacja zmienia się w nieregularny sposób, podobny do losowego ruchu. Po trzecie, pojawia się duża wrażliwość na warunki początkowe: dwa prawie nierozróżnialne warunki początkowe prowadzą do całkowicie różnej ewolucji populacji. Wszystkie te cechy są charakterystyczne dla zachowania które przypomina ruch całkowicie losowy i nazywa się <em>deterministycznym chaosem</em>.</p>
<p>Zbadajmy tę własność! Na początek ustalmy wartość parametru na <span class="math"><em>a</em> = 3. 2</span> i przyjrzyjmy się ewolucji.</p>
<p>H</p>
<div class="figure">
<embed src="xi2.pdf"><p class="caption">image</p>
</div>
<p>Zaskoczeniem może być fakt, że tym razem populacja nie osiąga jednej wartości ale dwie, które występują kolejno po sobie co drugi sezon. Okazało się jednak, że to nie koniec kłopotów.</p>
<p>H</p>
<div class="figure">
<embed src="xi3.pdf"><p class="caption">image</p>
</div>
<p></p>
<p>Dla <span class="math"><em>a</em> = 4</span> układ przestaje być przewidywalny. Popatrzmy na rysunek lub wygenerujmy sami ciąg liczb za pomocą komputera. Wyniki wyglądają na czysto przypadkowe i dla nieco różniących się populacji początkowych są kompletnie różne. Uważny czytelki powinien jednak zaprotestować. Jak układ, który jest opisany przez deterministyczne<sup><a href="#fn2" class="footnoteRef" id="fnref2">2</a></sup> równanie, do tego nawet całkiem proste, może mieć nieprzewidywalne zachowanie? Otóż może. Własnością tego układu jest niezwykła czułość na warunki początkowe. Wystarczy wystartować z 2 warunków początkowych różniących się o jedną milionową i już po kilku krokach otrzymamy całkiem inne wartości populacji. Sprawdźmy to przy pomocy komputera:</p>
<p>a=4.0 x=0.123 y=0.123+0.000001 pkts = [] for i in range(25): x = a*x*(1-x) y = a*y*(1-y) print x,y</p>
<p>Oto mamy prosty model deterministycznej ewolucji. Ale ten determinizm jest złudny, jest determinizmem tylko matematycznym. Z praktycznego punktu widzenie układ zachowuje się w sposób nieprzewidywalny ponieważ nigdy nie możemy zadać warunków początkowych w matematycznie dokładny sposób. W rzeczywistości wszystko jest określane z pewną dokładnością: każdy przyrząd pomiarowy ma określoną dokładność i to może być przyczyną praktycznej nieprzewidywalności w deterministycznych układach posiadających własność chaotyczności. Przykładem niech będą modele prognozy pogody które zawsze wykazują własność chaotyczności. Dlatego tak kiepskie bywają prognozy pogody w dłuższym przedziale czasowym.</p>
<p>Analiza układów chaotycznych jest niezwykle trudna. Możemy jednak dość łatwo odkryć wiele tajemnic chaotyczności stosując symulacje komputerowe. Narysujmy tak zwany diagram bifurkacyjny, na którym będziemy odkładać na osi odciętych wartości parametru <span class="math"><em>a</em></span> a na osi rzędnych stabilne punkty stałe odwzorowania logistycznego. Stabilne punkty otrzymamy symulując dużą ilość układów jednocześnie i rysując wartości po wieku krokach obliczeń. Jak można się domyślić wymaga to wykonania dużej ilości obliczeń. Spróbujmy “ostrożnie” postępować z następującymi wartościami:</p>
<p>Powinniśmy otrzymać coś podobnego do rysunku 4. Jak interpretować ten rysunek? Np. dla wartości parametru <span class="math"><em>a</em> = 3. 3</span> mamy 2 stabilne punkty stałe (co drugi sezon populacja ma tą samą liczebność). Np. dla parametru <span class="math"><em>a</em> = 3. 5</span> mamy 4 punkty stałe (co czwarty sezon populacja ma tą samą liczebność). Np. dla parametru <span class="math"><em>a</em> = 3. 56</span> mamy 8 punktów stałych (co ósmy sezon populacja ma tą samą liczebność). Ale dla parametru <span class="math"><em>a</em> ≈ 3. 57</span> mamy nieskończenie wiele punktów stałych (liczebność w populacji nigdy się nie powtarza i zmienia się w nieprzewidywalny sposób). Mając jednak program komputerowy, możemy zmienić zakres parametru <span class="math"><em>a</em></span> i eksplorować własnoręcznie niekończącą się strukturę geometryczną owego diagramu.</p>
<p>H</p>
<p>[fig:bd] <img src="Bifurcation_diagram.png" alt="image" /></p>
<p></p>
<p>To tylko czubek góry lodowej. Na temat tego równania napisano tysiące prac naukowych i mimo tego wciąż skrywa ono swoje tajemnice. Z pomocą symulacji komputerowej można, nawet bez stosowania zaawansowanej matematyki pobawić się w odkrywcę świata dynamiki nieliniowej. Zapraszamy do lektury wersji online, zawierającej szczegóły wielu ciekawych własności równania logistycznego oraz interesujące sposoby ich wizualizacji.</p>
<p>1</p>
<p>May, R. M. “Simple mathematical models with very complicated dynamics”. Nature 261 (5560): 459–467,1976.</p>
<div class="footnotes">
<hr />
<ol>
<li id="fn1"><p>Program jest napisany w języku Python i można go uruchomić m.in. na platformie Sage. Zachęcamy do lektury książki http://icse.us.edu.pl/e-book/<a href="#fnref1">↩</a></p></li>
<li id="fn2"><p>Prawo deterministyczne to takie w którym przyszłość jest jednoznacznie określona przez stan początkowy. Antonimem jest prawo probablistyczne.<a href="#fnref2">↩</a></p></li>
</ol>
</div>
